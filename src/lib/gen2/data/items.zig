//! Code generated by `tools/generate` - manual edits will be overwritten

const std = @import("std");

const data = @import("../../gen2/data.zig");

const assert = std.debug.assert;

const Type = data.Type;

pub const Item = enum(u8) {
    None,
    PinkBow, // Normal
    BlackBelt, // Fighting
    SharpBeak, // Flying
    PoisonBarb, // Poison
    SoftSand, // Ground
    HardStone, // Rock
    SilverPowder, // Bug
    SpellTag, // Ghost
    MetalCoat, // Steel
    PolkadotBow, // ??? (Normal)
    Charcoal, // Fire
    MysticWater, // Water
    MiracleSeed, // Grass
    Magnet, // Electric
    TwistedSpoon, // Psychic
    NeverMeltIce, // Ice
    DragonScale, // Dragon
    BlackGlasses, // Dark
    MasterBall,
    UltraBall,
    BrightPowder, // BRIGHTPOWDER
    GreatBall,
    PokeBall,
    TownMap,
    MoonStone,
    Antidote,
    BurnHeal,
    IceHeal,
    Awakening,
    ParylzeHeal,
    FullRestore,
    MaxPotion,
    HyperPotion,
    SuperPotion,
    Potion,
    EscapeRope,
    Repel,
    MaxElixir,
    FireStone,
    ThunderStone,
    WaterStone,
    HPUp,
    Protein,
    Iron,
    Carbos,
    LuckyPunch,
    Calcium,
    RareCandy,
    XAccuracy,
    LeafStone,
    MetalPowder, // METAL_POWDER
    Nugget,
    PokeDoll,
    FullHeal,
    Revive,
    MaxRevive,
    GuardSpec,
    SuperRepel,
    MaxRepel,
    DireHit,
    FreshWater,
    SodaPop,
    Lemonade,
    XAttack,
    XDefend,
    XSpeed,
    XSpecial,
    PokeFlute,
    ExpShare,
    SilverLeaf,
    PPUp,
    Ether,
    MaxEther,
    Elixir,
    MoomooMilk,
    QuickClaw, // QUICK_CLAW
    GoldLeaf,
    KingsRock, // FLINCH
    RedApricorn,
    TinyMushroom,
    BigMushroom,
    BlueApricorn,
    AmuletCoin, // AMULET_COIN
    YellowApricorn,
    GreenApricorn,
    CleanseTag, // CLEANSE_TAG
    WhiteApricorn,
    BlackApricorn,
    PinkApricorn,
    SlowpokeTail,
    Stick,
    SmokeBall, // ESCAPE
    Pearl,
    BigPearl,
    Everstone,
    RageCandyBar,
    ThickClub,
    FocusBand, // FOCUS_BAND
    EnergyPowder,
    EnergyRoot,
    HealPowder,
    RevivalHerb,
    LuckyEgg,
    Stardust,
    StarPiece,
    BerryJuice, // BERRY
    ScopeLens, // CRITICAL_UP
    DragonFang,
    Leftovers, // LEFTOVERS
    BerserkGene,
    SacredAsh,
    HeavyBall,
    LevelBall,
    LureBall,
    FastBall,
    LightBall,
    FriendBall,
    MoonBall,
    LoveBall,
    NormalBox,
    GorgeousBox,
    SunStone,
    UpGrade,
    ParkBall,
    BrickPiece,
    TM01,
    TM02,
    TM03,
    TM04,
    TM05,
    TM06,
    TM07,
    TM08,
    TM09,
    TM10,
    TM11,
    TM12,
    TM13,
    TM14,
    TM15,
    TM16,
    TM17,
    TM18,
    TM19,
    TM20,
    TM21,
    TM22,
    TM23,
    TM24,
    TM25,
    TM26,
    TM27,
    TM28,
    TM29,
    TM30,
    TM31,
    TM32,
    TM33,
    TM34,
    TM35,
    TM36,
    TM37,
    TM38,
    TM39,
    TM40,
    TM41,
    TM42,
    TM43,
    TM44,
    TM45,
    TM46,
    TM47,
    TM48,
    TM49,
    TM50,
    FlowerMail,
    SurfMail,
    LightBlueMail,
    PortrailMail,
    LovelyMail,
    EonMail,
    MorphMail,
    BlueSkyMail,
    MusicMail,
    MirageMail,
    PSNCureBerry, // HEAL_POISON
    PRZCureBerry, // HEAL_PARALYZE
    BurntBerry, // HEAL_FREEZE
    IceBerry, // HEAL_BURN
    BitterBerry, // HEAL_CONFUSION
    MintBerry, // HEAL_SLEEP
    MiracleBerry, // HEAL_STATUS
    MysteryBerry, // RESTORE_PP
    Berry, // BERRY
    GoldBerry, // BERRY

    comptime {
        assert(@sizeOf(Item) == 1);
    }

    pub inline fn boost(item: Item) ?Type {
        assert(item != .None);
        if (item == .PolkadotBow) return .Normal;
        return if (@enumToInt(item) <= 18) @intToEnum(Type, @enumToInt(item) - 1) else null;
    }

    pub inline fn mail(item: Item) bool {
        assert(item != .None);
        return @enumToInt(item) > 175 and @enumToInt(item) <= 185;
    }

    pub inline fn berry(item: Item) bool {
        assert(item != .None);
        return @enumToInt(item) > 185;
    }
};
