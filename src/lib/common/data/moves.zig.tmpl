//! Code generated by `tools/generate` - manual edits will be overwritten

const std = @import("std");
const gen{{{ gen }}} = @import("../../gen{{{ gen }}}/data.zig");

const assert = std.debug.assert;

const Move = gen{{{ gen }}}.Move;
const Type = gen{{{ gen }}}.Type;

pub const Moves = enum({{{ Moves.type }}}) {
    None,
    {{{ Moves.values }}},

    const data = [_]Move{
        {{{ Moves.data }}},
    };

    comptime {
        assert(@sizeOf(Moves) == {{{ Moves.size }}});
        assert(@sizeOf(@TypeOf(data)) == {{{ Moves.dataSize }}});
    }

    pub fn get(id: Moves) Move {
        assert(id != .None);
        return data[@enumToInt(id) - 1];
    }
};
