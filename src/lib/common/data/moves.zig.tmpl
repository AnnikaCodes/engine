//! Code generated by `tools/generate` - manual edits will be overwritten

const std = @import("std");
const builtin = @import("builtin");

const gen{{{ gen }}} = @import("../../gen{{{ gen }}}/data.zig");

const assert = std.debug.assert;

const Type = gen{{{ gen }}}.Type;

pub const Move = enum({{{ Move.type }}}) {
    None,
    {{{ Move.values }}},

    {{{ Move.Data }}}

    const data = [_]Data{
        {{{ Move.data }}},
    };
{{{ Move.Effect }}}{{{ Move.ppData }}}
    comptime {
        assert(@sizeOf(Move) == {{{ Move.size }}});
        assert(@sizeOf(@TypeOf(data)) == {{{ Move.dataSize }}});
    }

    pub fn get(id: Move) Data {
        assert(id != .None);
        return data[@enumToInt(id) - 1];
    }

    // @test-only
    {{{ Move.ppFn }}}
};
