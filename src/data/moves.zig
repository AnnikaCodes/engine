//! Code generated by `tools/generate` - manual edits will be overwritten.

const std = @import("std");
const data = @import("../data.zig");

const assert = std.debug.assert;

const Move = data.Move;
const Type = data.Type;

/// Move constants representing all legal moves, plus the sentinel `None`.
/// The sentinal value is guaranteed to be bit-equivalent to `0` and can be
/// used to represent a null-pointer equivalent without using the additional
/// byte that `?Moves` would entail.
///
/// *See:* https://pkmn.cc/pokered/constants/move_constants.asm
///
pub const Moves = enum(u8) {
    None,
    Pound,
    KarateChop,
    DoubleSlap,
    CometPunch,
    MegaPunch,
    PayDay,
    FirePunch,
    IcePunch,
    ThunderPunch,
    Scratch,
    ViseGrip,
    Guillotine,
    RazorWind,
    SwordsDance,
    Cut,
    Gust,
    WingAttack,
    Whirlwind,
    Fly,
    Bind,
    Slam,
    VineWhip,
    Stomp,
    DoubleKick,
    MegaKick,
    JumpKick,
    RollingKick,
    SandAttack,
    Headbutt,
    HornAttack,
    FuryAttack,
    HornDrill,
    Tackle,
    BodySlam,
    Wrap,
    TakeDown,
    Thrash,
    DoubleEdge,
    TailWhip,
    PoisonSting,
    Twineedle,
    PinMissile,
    Leer,
    Bite,
    Growl,
    Roar,
    Sing,
    Supersonic,
    SonicBoom,
    Disable,
    Acid,
    Ember,
    Flamethrower,
    Mist,
    WaterGun,
    HydroPump,
    Surf,
    IceBeam,
    Blizzard,
    Psybeam,
    BubbleBeam,
    AuroraBeam,
    HyperBeam,
    Peck,
    DrillPeck,
    Submission,
    LowKick,
    Counter,
    SeismicToss,
    Strength,
    Absorb,
    MegaDrain,
    LeechSeed,
    Growth,
    RazorLeaf,
    SolarBeam,
    PoisonPowder,
    StunSpore,
    SleepPowder,
    PetalDance,
    StringShot,
    DragonRage,
    FireSpin,
    ThunderShock,
    Thunderbolt,
    ThunderWave,
    Thunder,
    RockThrow,
    Earthquake,
    Fissure,
    Dig,
    Toxic,
    Confusion,
    Psychic,
    Hypnosis,
    Meditate,
    Agility,
    QuickAttack,
    Rage,
    Teleport,
    NightShade,
    Mimic,
    Screech,
    DoubleTeam,
    Recover,
    Harden,
    Minimize,
    Smokescreen,
    ConfuseRay,
    Withdraw,
    DefenseCurl,
    Barrier,
    LightScreen,
    Haze,
    Reflect,
    FocusEnergy,
    Bide,
    Metronome,
    MirrorMove,
    SelfDestruct,
    EggBomb,
    Lick,
    Smog,
    Sludge,
    BoneClub,
    FireBlast,
    Waterfall,
    Clamp,
    Swift,
    SkullBash,
    SpikeCannon,
    Constrict,
    Amnesia,
    Kinesis,
    SoftBoiled,
    HighJumpKick,
    Glare,
    DreamEater,
    PoisonGas,
    Barrage,
    LeechLife,
    LovelyKiss,
    SkyAttack,
    Transform,
    Bubble,
    DizzyPunch,
    Spore,
    Flash,
    Psywave,
    Splash,
    AcidArmor,
    Crabhammer,
    Explosion,
    FurySwipes,
    Bonemerang,
    Rest,
    RockSlide,
    HyperFang,
    Sharpen,
    Conversion,
    TriAttack,
    SuperFang,
    Slash,
    Substitute,
    Struggle,

    comptime {
        assert(@sizeOf(Moves) == 1);
    }

    pub fn get(id: Moves) *const Move {
        assert(id != .None);
        return &MOVES[@enumToInt(id) - 1];
    }
};

// TODO: add effect handler data
/// Basic raw move data - names and descriptions are handled elswhere.
///
/// **NOTE:** this data differs from Pok√©mon Showdown:
///
///   - Bide has `Normal`-type instead of `???`-type
///   - moves which always hit have `accuracy` of `100` instead of `true`
///   - numerous fields (volatiles, multihit, etc) are handled differently and
///     thus do not appear in the data definitions below
///
/// *See:* https://pkmn.cc/pokered/data/moves/moves.asm
///
const MOVES = [_]Move{ Move{
    .id = Moves.Pound,
    .bp = 40,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 35,
}, Move{
    .id = Moves.KarateChop,
    .bp = 50,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 25,
}, Move{
    .id = Moves.DoubleSlap,
    .bp = 15,
    .type = Type.Normal,
    .accuracy = 85,
    .pp = 10,
}, Move{
    .id = Moves.CometPunch,
    .bp = 18,
    .type = Type.Normal,
    .accuracy = 85,
    .pp = 15,
}, Move{
    .id = Moves.MegaPunch,
    .bp = 80,
    .type = Type.Normal,
    .accuracy = 85,
    .pp = 20,
}, Move{
    .id = Moves.PayDay,
    .bp = 40,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.FirePunch,
    .bp = 75,
    .type = Type.Fire,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.IcePunch,
    .bp = 75,
    .type = Type.Ice,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.ThunderPunch,
    .bp = 75,
    .type = Type.Electric,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.Scratch,
    .bp = 40,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 35,
}, Move{
    .id = Moves.ViseGrip,
    .bp = 55,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.Guillotine,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 30,
    .pp = 5,
}, Move{
    .id = Moves.RazorWind,
    .bp = 80,
    .type = Type.Normal,
    .accuracy = 75,
    .pp = 10,
}, Move{
    .id = Moves.SwordsDance,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.Cut,
    .bp = 50,
    .type = Type.Normal,
    .accuracy = 95,
    .pp = 30,
}, Move{
    .id = Moves.Gust,
    .bp = 40,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 35,
}, Move{
    .id = Moves.WingAttack,
    .bp = 35,
    .type = Type.Flying,
    .accuracy = 100,
    .pp = 35,
}, Move{
    .id = Moves.Whirlwind,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 85,
    .pp = 20,
}, Move{
    .id = Moves.Fly,
    .bp = 70,
    .type = Type.Flying,
    .accuracy = 95,
    .pp = 15,
}, Move{
    .id = Moves.Bind,
    .bp = 15,
    .type = Type.Normal,
    .accuracy = 75,
    .pp = 20,
}, Move{
    .id = Moves.Slam,
    .bp = 80,
    .type = Type.Normal,
    .accuracy = 75,
    .pp = 20,
}, Move{
    .id = Moves.VineWhip,
    .bp = 35,
    .type = Type.Grass,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.Stomp,
    .bp = 65,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.DoubleKick,
    .bp = 30,
    .type = Type.Fighting,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.MegaKick,
    .bp = 120,
    .type = Type.Normal,
    .accuracy = 75,
    .pp = 5,
}, Move{
    .id = Moves.JumpKick,
    .bp = 70,
    .type = Type.Fighting,
    .accuracy = 95,
    .pp = 25,
}, Move{
    .id = Moves.RollingKick,
    .bp = 60,
    .type = Type.Fighting,
    .accuracy = 85,
    .pp = 15,
}, Move{
    .id = Moves.SandAttack,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.Headbutt,
    .bp = 70,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.HornAttack,
    .bp = 65,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 25,
}, Move{
    .id = Moves.FuryAttack,
    .bp = 15,
    .type = Type.Normal,
    .accuracy = 85,
    .pp = 20,
}, Move{
    .id = Moves.HornDrill,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 30,
    .pp = 5,
}, Move{
    .id = Moves.Tackle,
    .bp = 35,
    .type = Type.Normal,
    .accuracy = 95,
    .pp = 35,
}, Move{
    .id = Moves.BodySlam,
    .bp = 85,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.Wrap,
    .bp = 15,
    .type = Type.Normal,
    .accuracy = 85,
    .pp = 20,
}, Move{
    .id = Moves.TakeDown,
    .bp = 90,
    .type = Type.Normal,
    .accuracy = 85,
    .pp = 20,
}, Move{
    .id = Moves.Thrash,
    .bp = 90,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.DoubleEdge,
    .bp = 100,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.TailWhip,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.PoisonSting,
    .bp = 15,
    .type = Type.Poison,
    .accuracy = 100,
    .pp = 35,
}, Move{
    .id = Moves.Twineedle,
    .bp = 25,
    .type = Type.Bug,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.PinMissile,
    .bp = 14,
    .type = Type.Bug,
    .accuracy = 85,
    .pp = 20,
}, Move{
    .id = Moves.Leer,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.Bite,
    .bp = 60,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 25,
}, Move{
    .id = Moves.Growl,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 40,
}, Move{
    .id = Moves.Roar,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.Sing,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 55,
    .pp = 15,
}, Move{
    .id = Moves.Supersonic,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 55,
    .pp = 20,
}, Move{
    .id = Moves.SonicBoom,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 90,
    .pp = 20,
}, Move{
    .id = Moves.Disable,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 55,
    .pp = 20,
}, Move{
    .id = Moves.Acid,
    .bp = 40,
    .type = Type.Poison,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.Ember,
    .bp = 40,
    .type = Type.Fire,
    .accuracy = 100,
    .pp = 25,
}, Move{
    .id = Moves.Flamethrower,
    .bp = 95,
    .type = Type.Fire,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.Mist,
    .bp = 0,
    .type = Type.Ice,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.WaterGun,
    .bp = 40,
    .type = Type.Water,
    .accuracy = 100,
    .pp = 25,
}, Move{
    .id = Moves.HydroPump,
    .bp = 120,
    .type = Type.Water,
    .accuracy = 80,
    .pp = 5,
}, Move{
    .id = Moves.Surf,
    .bp = 95,
    .type = Type.Water,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.IceBeam,
    .bp = 95,
    .type = Type.Ice,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.Blizzard,
    .bp = 120,
    .type = Type.Ice,
    .accuracy = 90,
    .pp = 5,
}, Move{
    .id = Moves.Psybeam,
    .bp = 65,
    .type = Type.Psychic,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.BubbleBeam,
    .bp = 65,
    .type = Type.Water,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.AuroraBeam,
    .bp = 65,
    .type = Type.Ice,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.HyperBeam,
    .bp = 150,
    .type = Type.Normal,
    .accuracy = 90,
    .pp = 5,
}, Move{
    .id = Moves.Peck,
    .bp = 35,
    .type = Type.Flying,
    .accuracy = 100,
    .pp = 35,
}, Move{
    .id = Moves.DrillPeck,
    .bp = 80,
    .type = Type.Flying,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.Submission,
    .bp = 80,
    .type = Type.Fighting,
    .accuracy = 80,
    .pp = 25,
}, Move{
    .id = Moves.LowKick,
    .bp = 50,
    .type = Type.Fighting,
    .accuracy = 90,
    .pp = 20,
}, Move{
    .id = Moves.Counter,
    .bp = 1,
    .type = Type.Fighting,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.SeismicToss,
    .bp = 1,
    .type = Type.Fighting,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.Strength,
    .bp = 80,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.Absorb,
    .bp = 20,
    .type = Type.Grass,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.MegaDrain,
    .bp = 40,
    .type = Type.Grass,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.LeechSeed,
    .bp = 0,
    .type = Type.Grass,
    .accuracy = 90,
    .pp = 10,
}, Move{
    .id = Moves.Growth,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 40,
}, Move{
    .id = Moves.RazorLeaf,
    .bp = 55,
    .type = Type.Grass,
    .accuracy = 95,
    .pp = 25,
}, Move{
    .id = Moves.SolarBeam,
    .bp = 120,
    .type = Type.Grass,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.PoisonPowder,
    .bp = 0,
    .type = Type.Poison,
    .accuracy = 75,
    .pp = 35,
}, Move{
    .id = Moves.StunSpore,
    .bp = 0,
    .type = Type.Grass,
    .accuracy = 75,
    .pp = 30,
}, Move{
    .id = Moves.SleepPowder,
    .bp = 0,
    .type = Type.Grass,
    .accuracy = 75,
    .pp = 15,
}, Move{
    .id = Moves.PetalDance,
    .bp = 70,
    .type = Type.Grass,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.StringShot,
    .bp = 0,
    .type = Type.Bug,
    .accuracy = 95,
    .pp = 40,
}, Move{
    .id = Moves.DragonRage,
    .bp = 1,
    .type = Type.Dragon,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.FireSpin,
    .bp = 15,
    .type = Type.Fire,
    .accuracy = 70,
    .pp = 15,
}, Move{
    .id = Moves.ThunderShock,
    .bp = 40,
    .type = Type.Electric,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.Thunderbolt,
    .bp = 95,
    .type = Type.Electric,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.ThunderWave,
    .bp = 0,
    .type = Type.Electric,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.Thunder,
    .bp = 120,
    .type = Type.Electric,
    .accuracy = 70,
    .pp = 10,
}, Move{
    .id = Moves.RockThrow,
    .bp = 50,
    .type = Type.Rock,
    .accuracy = 65,
    .pp = 15,
}, Move{
    .id = Moves.Earthquake,
    .bp = 100,
    .type = Type.Ground,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.Fissure,
    .bp = 0,
    .type = Type.Ground,
    .accuracy = 30,
    .pp = 5,
}, Move{
    .id = Moves.Dig,
    .bp = 100,
    .type = Type.Ground,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.Toxic,
    .bp = 0,
    .type = Type.Poison,
    .accuracy = 85,
    .pp = 10,
}, Move{
    .id = Moves.Confusion,
    .bp = 50,
    .type = Type.Psychic,
    .accuracy = 100,
    .pp = 25,
}, Move{
    .id = Moves.Psychic,
    .bp = 90,
    .type = Type.Psychic,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.Hypnosis,
    .bp = 0,
    .type = Type.Psychic,
    .accuracy = 60,
    .pp = 20,
}, Move{
    .id = Moves.Meditate,
    .bp = 0,
    .type = Type.Psychic,
    .accuracy = 100,
    .pp = 40,
}, Move{
    .id = Moves.Agility,
    .bp = 0,
    .type = Type.Psychic,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.QuickAttack,
    .bp = 40,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.Rage,
    .bp = 20,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.Teleport,
    .bp = 0,
    .type = Type.Psychic,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.NightShade,
    .bp = 1,
    .type = Type.Ghost,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.Mimic,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.Screech,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 85,
    .pp = 40,
}, Move{
    .id = Moves.DoubleTeam,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.Recover,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.Harden,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.Minimize,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.Smokescreen,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.ConfuseRay,
    .bp = 0,
    .type = Type.Ghost,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.Withdraw,
    .bp = 0,
    .type = Type.Water,
    .accuracy = 100,
    .pp = 40,
}, Move{
    .id = Moves.DefenseCurl,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 40,
}, Move{
    .id = Moves.Barrier,
    .bp = 0,
    .type = Type.Psychic,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.LightScreen,
    .bp = 0,
    .type = Type.Psychic,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.Haze,
    .bp = 0,
    .type = Type.Ice,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.Reflect,
    .bp = 0,
    .type = Type.Psychic,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.FocusEnergy,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.Bide,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.Metronome,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.MirrorMove,
    .bp = 0,
    .type = Type.Flying,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.SelfDestruct,
    .bp = 130,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 5,
}, Move{
    .id = Moves.EggBomb,
    .bp = 100,
    .type = Type.Normal,
    .accuracy = 75,
    .pp = 10,
}, Move{
    .id = Moves.Lick,
    .bp = 20,
    .type = Type.Ghost,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.Smog,
    .bp = 20,
    .type = Type.Poison,
    .accuracy = 70,
    .pp = 20,
}, Move{
    .id = Moves.Sludge,
    .bp = 65,
    .type = Type.Poison,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.BoneClub,
    .bp = 65,
    .type = Type.Ground,
    .accuracy = 85,
    .pp = 20,
}, Move{
    .id = Moves.FireBlast,
    .bp = 120,
    .type = Type.Fire,
    .accuracy = 85,
    .pp = 5,
}, Move{
    .id = Moves.Waterfall,
    .bp = 80,
    .type = Type.Water,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.Clamp,
    .bp = 35,
    .type = Type.Water,
    .accuracy = 75,
    .pp = 10,
}, Move{
    .id = Moves.Swift,
    .bp = 60,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.SkullBash,
    .bp = 100,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.SpikeCannon,
    .bp = 20,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.Constrict,
    .bp = 10,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 35,
}, Move{
    .id = Moves.Amnesia,
    .bp = 0,
    .type = Type.Psychic,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.Kinesis,
    .bp = 0,
    .type = Type.Psychic,
    .accuracy = 80,
    .pp = 15,
}, Move{
    .id = Moves.SoftBoiled,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.HighJumpKick,
    .bp = 85,
    .type = Type.Fighting,
    .accuracy = 90,
    .pp = 20,
}, Move{
    .id = Moves.Glare,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 75,
    .pp = 30,
}, Move{
    .id = Moves.DreamEater,
    .bp = 100,
    .type = Type.Psychic,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.PoisonGas,
    .bp = 0,
    .type = Type.Poison,
    .accuracy = 55,
    .pp = 40,
}, Move{
    .id = Moves.Barrage,
    .bp = 15,
    .type = Type.Normal,
    .accuracy = 85,
    .pp = 20,
}, Move{
    .id = Moves.LeechLife,
    .bp = 20,
    .type = Type.Bug,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.LovelyKiss,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 75,
    .pp = 10,
}, Move{
    .id = Moves.SkyAttack,
    .bp = 140,
    .type = Type.Flying,
    .accuracy = 90,
    .pp = 5,
}, Move{
    .id = Moves.Transform,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.Bubble,
    .bp = 20,
    .type = Type.Water,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.DizzyPunch,
    .bp = 70,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.Spore,
    .bp = 0,
    .type = Type.Grass,
    .accuracy = 100,
    .pp = 15,
}, Move{
    .id = Moves.Flash,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 70,
    .pp = 20,
}, Move{
    .id = Moves.Psywave,
    .bp = 1,
    .type = Type.Psychic,
    .accuracy = 80,
    .pp = 15,
}, Move{
    .id = Moves.Splash,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 40,
}, Move{
    .id = Moves.AcidArmor,
    .bp = 0,
    .type = Type.Poison,
    .accuracy = 100,
    .pp = 40,
}, Move{
    .id = Moves.Crabhammer,
    .bp = 90,
    .type = Type.Water,
    .accuracy = 85,
    .pp = 10,
}, Move{
    .id = Moves.Explosion,
    .bp = 170,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 5,
}, Move{
    .id = Moves.FurySwipes,
    .bp = 18,
    .type = Type.Normal,
    .accuracy = 80,
    .pp = 15,
}, Move{
    .id = Moves.Bonemerang,
    .bp = 50,
    .type = Type.Ground,
    .accuracy = 90,
    .pp = 10,
}, Move{
    .id = Moves.Rest,
    .bp = 0,
    .type = Type.Psychic,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.RockSlide,
    .bp = 75,
    .type = Type.Rock,
    .accuracy = 90,
    .pp = 10,
}, Move{
    .id = Moves.HyperFang,
    .bp = 80,
    .type = Type.Normal,
    .accuracy = 90,
    .pp = 15,
}, Move{
    .id = Moves.Sharpen,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.Conversion,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 30,
}, Move{
    .id = Moves.TriAttack,
    .bp = 80,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.SuperFang,
    .bp = 1,
    .type = Type.Normal,
    .accuracy = 90,
    .pp = 10,
}, Move{
    .id = Moves.Slash,
    .bp = 70,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 20,
}, Move{
    .id = Moves.Substitute,
    .bp = 0,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 10,
}, Move{
    .id = Moves.Struggle,
    .bp = 50,
    .type = Type.Normal,
    .accuracy = 100,
    .pp = 10,
} };
